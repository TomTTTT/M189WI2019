axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by sex") + scale_fill_jama(name="Sex",
breaks=c("0", "1"),
labels=c("Female", "Male"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By work
#initialize binary work variable
df$works <- ifelse(df$work == 0, 0, 1)
df_works <- df %>% select("works", "likesgames")
df_works<-data.frame(prop.table(table(df_works$likesgames, df_works$works),2))
df_works$Freq<-round(df_works$Freq, 3)
ggplot(df_works, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by\n whether someone works") + scale_fill_jama(name="Works",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By is there a computer at home
df_home <- df %>% select("home", "likesgames")
df_home<-data.frame(prop.table(table(df_home$likesgames, df_home$home),2))
df_home$Freq<-round(df_home$Freq, 3)
ggplot(df_home, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game Preference by\n if owns computer at home") + scale_fill_jama(name="Computer\n at home",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By own a pc
df_own <- df %>% select("own", "likesgames")
df_own<-data.frame(prop.table(table(df_own$likesgames, df_own$own),2))
df_own$Freq<-round(df_own$Freq, 3)
ggplot(df_own, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14))+
ggtitle("Game Preference by Own") + scale_fill_jama(name="Own",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#Arcade preference
#Create arcade binary variable
df$arcade <- ifelse(df$where == 1 | df$where == 4 |  df$where == 6, 1, 0)
df_arcade <- df %>% select("arcade", "likesgames")
df_arcade<-data.frame(prop.table(table(df_arcade$likesgames, df_arcade$arcade),2))
df_arcade$Freq<-round(df_arcade$Freq, 3)
ggplot(df_arcade, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14))+
ggtitle("Game Preference by whether someone plays at the arcade") + scale_fill_jama(name="Plays at\n Arcade",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#Plots
#By sex
df_sex <- df %>% select("sex", "likesgames")
df_sex<-data.frame(prop.table(table(df_sex$likesgames, df_sex$sex),2))
df_sex$Freq<-round(df_sex$Freq, 3)
ggplot(df_sex, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by sex") + scale_fill_jama(name="Sex",
breaks=c("0", "1"),
labels=c("Female", "Male"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By work
#initialize binary work variable
df$works <- ifelse(df$work == 0, 0, 1)
df_works <- df %>% select("works", "likesgames")
df_works<-data.frame(prop.table(table(df_works$likesgames, df_works$works),2))
df_works$Freq<-round(df_works$Freq, 3)
ggplot(df_works, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by whether someone works") + scale_fill_jama(name="Works",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By is there a computer at home
df_home <- df %>% select("home", "likesgames")
df_home<-data.frame(prop.table(table(df_home$likesgames, df_home$home),2))
df_home$Freq<-round(df_home$Freq, 3)
ggplot(df_home, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game Preference by whether someone owns computer at home") + scale_fill_jama(name="Computer\n at home",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By own a pc
df_own <- df %>% select("own", "likesgames")
df_own<-data.frame(prop.table(table(df_own$likesgames, df_own$own),2))
df_own$Freq<-round(df_own$Freq, 3)
ggplot(df_own, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14))+
ggtitle("Game Preference by whether someone owns a PC") + scale_fill_jama(name="Own",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#Arcade preference
#Create arcade binary variable
df$arcade <- ifelse(df$where == 1 | df$where == 4 |  df$where == 6, 1, 0)
df_arcade <- df %>% select("arcade", "likesgames")
df_arcade<-data.frame(prop.table(table(df_arcade$likesgames, df_arcade$arcade),2))
df_arcade$Freq<-round(df_arcade$Freq, 3)
ggplot(df_arcade, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14))+
ggtitle("Game Preference by whether someone plays at the arcade") + scale_fill_jama(name="Plays at\n arcade",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
df_sex <- df %>% select("sex", "likesgames")
df_sex<-data.frame(prop.table(table(df_sex$likesgames, df_sex$sex),2))
df_sex$Freq<-round(df_sex$Freq, 3)
ggplot(df_sex, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by sex") + scale_fill_jama(name="Sex",
breaks=c("0", "1"),
labels=c("Female", "Male"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
df$works <- ifelse(df$work == 0, 0, 1)
df_works <- df %>% select("works", "likesgames")
df_works<-data.frame(prop.table(table(df_works$likesgames, df_works$works),2))
df_works$Freq<-round(df_works$Freq, 3)
ggplot(df_works, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by whether someone works") + scale_fill_jama(name="Works",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By is there a computer at home
df_home <- df %>% select("home", "likesgames")
df_home<-data.frame(prop.table(table(df_home$likesgames, df_home$home),2))
df_home$Freq<-round(df_home$Freq, 3)
ggplot(df_home, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game Preference by whether someone owns computer at home") + scale_fill_jama(name="Computer\n at home",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By own a pc
df_own <- df %>% select("own", "likesgames")
df_own<-data.frame(prop.table(table(df_own$likesgames, df_own$own),2))
df_own$Freq<-round(df_own$Freq, 3)
ggplot(df_own, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14))+
ggtitle("Game Preference by whether someone owns a PC") + scale_fill_jama(name="Own",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
df_home <- df %>% select("home", "likesgames")
df_home<-data.frame(prop.table(table(df_home$likesgames, df_home$home),2))
df_home$Freq<-round(df_home$Freq, 3)
ggplot(df_home, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game Preference by whether someone owns computer at home") + scale_fill_jama(name="Computer\n at home",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
#By own a pc
df_own <- df %>% select("own", "likesgames")
df_own<-data.frame(prop.table(table(df_own$likesgames, df_own$own),2))
df_own$Freq<-round(df_own$Freq, 3)
ggplot(df_own, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14))+
ggtitle("Game Preference by whether someone owns a PC") + scale_fill_jama(name="Own",
breaks=c("0", "1"),
labels=c("No", "Yes"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
colnames(df)
View(df)
install.packages("nnet")
library(nnet)
multinom()
colnames(df)
multinom(factor(action) + factor(adv) + factor(sim) + factor(sport) + factor(strategy) + factor(relax) + factor(coord) + factor(challenge) ~ factor(like)
multinom(factor(action) + factor(adv) + factor(sim) + factor(sport) + factor(strategy) + factor(relax) + factor(coord) + factor(challenge) ~ factor(like))
multinom(factor(action) + factor(adv) + factor(sim) + factor(sport) + factor(strategy) + factor(relax) + factor(coord) + factor(challenge) ~ factor(like), data=df)
multinom(factor(like) ~factor(action) + factor(adv) + factor(sim) + factor(sport) + factor(strategy) + factor(relax) + factor(coord) + factor(challenge) , data=df)
source('C:/Users/buwen/Documents/Git/M189WI2019/HW2/HW2_Master_Copy.R', echo=TRUE)
#######################
##### Scenario 1 ######
#######################
freq1.like = nrow(df %>% filter(like_binary == 1))
freq0.like = nrow(df %>% filter(like_binary == 0))
freq1.play = nrow(df %>% filter(played_prior == 1))
freq0.play = nrow(df %>% filter(played_prior == 0))
# total population
n <- dim(df)[1]
N <- 314
p.hat = freq1.play/n
# standard error estimator
p.se = (sqrt(p.hat * (1 - p.hat)) * sqrt(N-n)) / (sqrt(n-1) * sqrt(N))
# sqrt((p.hat * (1-p.hat)) / N)
# 1.96 for 5% of people who played week prior
ci.play = c(p.hat - (p.se/(sqrt(n)) * 2),
p.hat + (p.se/sqrt(n) * 2))
ci.play
#####################
##### BOOTSTRAP #####
#####################
### MEAN ###
ci.mean.boot = function(data, B, conf_lvl)
{
mean.data = mean(data, na.rm = TRUE)
sd.data = sd(data, na.rm = TRUE)
t = numeric(B)
n = length(B)
boot.population <- rep(data, length.out = 365)
for (i in 1:B)
{
# boot <- sample(B, n, replace = TRUE)
boot.sample <- sample(boot.population, size = 91, replace = F)
mean.b <- mean(boot.sample)
sd.b <- sd(boot.sample)
# t-test statistic
t[i] <- (mean.b - mean.data)/(sd.b/sqrt(n))
}
ci <- mean.data  + (sd.data/sqrt(n)) * quantile(t, c((1-conf_lvl)/2, 1-(1-conf_lvl)/2))
return(ci)
}
B = 1000
conf_lvl = 0.95
# error because boot.sample is filled with NA values
ci.mean.boot(df$like_binary, B, conf_lvl)
ci.mean.boot(df$played_prior, B, conf_lvl)
ci.mean.boot(df$time,B, conf_lvl)
########################
##### Scenario 2 #######
########################
ggplot(df, aes(x=freq)) + geom_histogram()
#note 13 observations are not available for frequency of play
ggplot(df, aes(x=time)) + geom_histogram()
#proportion that plays games at least every week
numPlayGames= 0
for(i in 1:length(df$freq)){
if(df$freq[i] < 3 & !is.na(df$freq[i])){numPlayGames = numPlayGames+1}
}
numObsPlayedGames =0
for(i in 1:length(df$time)){
if(df$time[i]>0){numObsPlayedGames= numObsPlayedGames+1}
}
propPlayGames= numPlayGames/(91-13)
propPlayWeekBefore= numObsPlayedGames/(91)
obsDaily=0
obsWeekly=0
obsMonthly=0
obsSemesterly= 0
for(i in 1:length(df$time)){
if(df$time[i]>3.5){obsDaily= obsDaily+1}
else if(df$time[i]<=3.5 & df$time[i]>.5){obsWeekly= obsWeekly+1}
else if(df$time[i]<=.5 & df$time[i]>0){obsMonthly= obsMonthly+1}
else{obsSemesterly= obsSemesterly+1}
}
expDaily=0
expWeekly= 0
expMonthly=0
expSemesterly= 0
for(i in 1:length(df$freq)){
if(df$freq[i] == 4 | is.na(df$freq[i])){expSemesterly= expSemesterly+1}
else if(df$freq[i] == 3 & !is.na(df$freq[i])){expMonthly= expMonthly+1}
else if(df$freq[i] == 2 & !is.na(df$freq[i])){expWeekly= expWeekly+1}
else{expDaily= expDaily+1}
}
Q1table = matrix(c(obsDaily,expDaily,obsWeekly, expWeekly,obsMonthly,expMonthly,
obsSemesterly,expSemesterly),ncol=2, byrow = TRUE)
colnames(Q1table)= c("observed", "expected")
rownames(Q1table)= c("Daily","Weekly", "Monthly","Semesterly/Never")
Q1table = as.table(Q1table)
Q1table
chisq.test(Q1table)
##################
####Question 4####
##################
#Separate data by people who like video games and people who don't
df_gamer<- df %>% filter(like == 2 | like == 3)
df_notgamer<- df %>% filter(like == 1 | like == 4 | like == 5)
#Create indicator for like and don't like in df
df$likesgames<- ifelse(df$like == 2 | df$like == 3, 1, 0)
data.tree <- tree(likesgames~educ+sex+age+home+math+work+own+cdrom+grade, data=df)
plot(data.tree, type="uniform", main="Classification Tree on \n Liking Towards Games")
text(data.tree)
df_gamer$likesgames<-ifelse(df_gamer$like==2, 1, 0)
attribute<-c("action", "adv", "sim", "sport", "strategy")
for(i in attribute){
eval(parse(text=paste0("
regression_",i,"<-glm(",i,"~relax + coord + master + bored + graphic, data=df_gamer, family=binomial(), na.action=na.omit)
")))
}
library(stargazer)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy)
##################
####Question 4####
##################
#Separate data by people who like video games and people who don't
df_gamer<- df %>% filter(like == 2 | like == 3)
df_notgamer<- df %>% filter(like == 1 | like == 4 | like == 5)
#Create indicator for like and don't like in df
df$likesgames<- ifelse(df$like == 2 | df$like == 3, 1, 0)
data.tree <- tree(likesgames~educ+sex+age+home+math+work+own+cdrom+grade, data=df)
plot(data.tree, type="uniform",)
text(data.tree, main="Classification Tree on \n Liking Towards Games")
df_gamer$likesgames<-ifelse(df_gamer$like==2, 1, 0)
attribute<-c("action", "adv", "sim", "sport", "strategy")
for(i in attribute){
eval(parse(text=paste0("
regression_",i,"<-glm(",i,"~relax + coord + master + bored + graphic, data=df_gamer, family=binomial(), na.action=na.omit)
")))
}
library(stargazer)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy)
##################
####Question 4####
##################
#Separate data by people who like video games and people who don't
df_gamer<- df %>% filter(like == 2 | like == 3)
df_notgamer<- df %>% filter(like == 1 | like == 4 | like == 5)
#Create indicator for like and don't like in df
df$likesgames<- ifelse(df$like == 2 | df$like == 3, 1, 0)
data.tree <- tree(likesgames~educ+sex+age+home+math+work+own+cdrom+grade, data=df)
plot(data.tree, type="uniform")
text(data.tree, main="Classification Tree on \n Liking Towards Games")
df_gamer$likesgames<-ifelse(df_gamer$like==2, 1, 0)
attribute<-c("action", "adv", "sim", "sport", "strategy")
for(i in attribute){
eval(parse(text=paste0("
regression_",i,"<-glm(",i,"~relax + coord + master + bored + graphic, data=df_gamer, family=binomial(), na.action=na.omit)
")))
}
library(stargazer)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy)
##################
####Question 4####
##################
#Separate data by people who like video games and people who don't
df_gamer<- df %>% filter(like == 2 | like == 3)
df_notgamer<- df %>% filter(like == 1 | like == 4 | like == 5)
#Create indicator for like and don't like in df
df$likesgames<- ifelse(df$like == 2 | df$like == 3, 1, 0)
data.tree <- tree(likesgames~educ+sex+age+home+math+work+own+cdrom+grade, data=df)
plot(data.tree, type="uniform")
text(data.tree )
title(main="Classification Tree on \n Liking Towards Games")
df_gamer$likesgames<-ifelse(df_gamer$like==2, 1, 0)
attribute<-c("action", "adv", "sim", "sport", "strategy")
for(i in attribute){
eval(parse(text=paste0("
regression_",i,"<-glm(",i,"~relax + coord + master + bored + graphic, data=df_gamer, family=binomial(), na.action=na.omit)
")))
}
library(stargazer)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy)
##################
####Question 4####
##################
#Separate data by people who like video games and people who don't
df_gamer<- df %>% filter(like == 2 | like == 3)
df_notgamer<- df %>% filter(like == 1 | like == 4 | like == 5)
#Create indicator for like and don't like in df
df$likesgames<- ifelse(df$like == 2 | df$like == 3, 1, 0)
data.tree <- tree(likesgames~educ+sex+age+home+math+work+own+cdrom+grade, data=df)
plot(data.tree, type="uniform")
text(data.tree )
title(main="Classification Tree on Liking Towards Games")
df_gamer$likesgames<-ifelse(df_gamer$like==2, 1, 0)
attribute<-c("action", "adv", "sim", "sport", "strategy")
for(i in attribute){
eval(parse(text=paste0("
regression_",i,"<-glm(",i,"~relax + coord + master + bored + graphic, data=df_gamer, family=binomial(), na.action=na.omit)
")))
}
library(stargazer)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy, header=FALSE, type='latex')
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy)
stargazer(regression_action, regression_adv, regression_sim, regression_sport, regression_strategy, header=FALSE, type='latex')
#####################
#####Question 5######
#####################
#By sex
df_sex <- df %>% select("sex", "likesgames")
df_sex<-data.frame(prop.table(table(df_sex$likesgames, df_sex$sex),2))
df_sex$Freq<-round(df_sex$Freq, 3)
ggplot(df_sex, aes(Var1, Freq, fill=Var2)) + geom_bar(position = "dodge", stat = "identity") +
xlab('Likes Games') + scale_x_discrete(labels=c('0' = 'No', '1' = 'Yes')) +
scale_y_continuous(label=scales::percent, limit=c(0,1)) +
# scale_fill_discrete() +
geom_text(aes(label=paste0(Freq*100,"%")), position=position_dodge(0.9), vjust =-1, size=5) +
theme(plot.title = element_text(hjust = 0.5, size=20), axis.text.x = element_text(size = 15),
axis.title.x = element_text(size=18),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size=18),
legend.title=element_text(size=14)) +
ggtitle("Game preference by sex") + scale_fill_jama(name="Sex",
breaks=c("0", "1"),
labels=c("Female", "Male"), alpha=0.9) +
guides(colour = guide_legend(override.aes = list(size=15)))
